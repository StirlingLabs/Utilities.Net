<Project DefaultTargets="ApplyGitInfo">
    <ItemGroup>
      <PackageReference Include="GitInfo" Version="2.1.2" PrivateAssets="All"/>
      <PackageReference Include="Microsoft.Build.Tasks.Git" Version="1.0.0" PrivateAssets="All"/>
      <PackageReference Include="Microsoft.SourceLink.Common" Version="1.0.0" PrivateAssets="All"/>
    </ItemGroup>
    <PropertyGroup>
        <GitBaseVersionMajor>$([System.DateTime]::Now.ToString(`yy`))</GitBaseVersionMajor>
        <GitBaseVersionMinor>$([System.DateTime]::Now.ToString(`MM`))</GitBaseVersionMinor>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <EnableSourceLink Condition="'$(RepositoryUrl)'!=''">true</EnableSourceLink>
        <ContinuousIntegrationBuild Condition="'$(CI)'!=''">true</ContinuousIntegrationBuild>
        <DeterministicSourcePaths Condition="'$(ContinuousIntegrationBuild)'!=''">$(ContinuousIntegrationBuild)</DeterministicSourcePaths>
        <GitThisAssembly>false</GitThisAssembly>
        <GitBaseVersion>$(GitBaseVersionMajor).$(GitBaseVersionMinor).0</GitBaseVersion>
        <GitInfoReportImportance>high</GitInfoReportImportance>
    </PropertyGroup>
    <ItemGroup Condition="$(RepositoryUrl.StartsWith('https://github.com/'))">
      <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All"/>
    </ItemGroup>
    <ItemGroup Condition="$(RepositoryUrl.StartsWith('https://gitlab.com/'))">
      <PackageReference Include="Microsoft.SourceLink.GitLab" Version="1.0.0" PrivateAssets="All"/>
    </ItemGroup>
    <Target Name="ApplyGitInfo" DependsOnTargets="GitInfo;InitializeSourceControlInformation">
        <ItemGroup>
            <MachineItemToHash Include="$([System.Environment]::MachineName)" />
            <MachineItemToHash Include="$([System.Environment]::ProcessorCount)" />
        </ItemGroup>
        <ItemGroup>
            <UserItemToHash Include="$([System.Environment]::UserName)" Condition="'$(GITHUB_ACTOR)'==''" />
            <UserItemToHash Include="$(GITHUB_ACTOR)" Condition="'$(GITHUB_ACTOR)'!=''" />
        </ItemGroup>
        <Hash ItemsToHash="@(MachineItemToHash)">
            <Output TaskParameter="HashResult" PropertyName="MachineUniqueHash" />
        </Hash>
        <Hash ItemsToHash="@(UserItemToHash)">
            <Output TaskParameter="HashResult" PropertyName="UserUniqueHash" />
        </Hash>
        <!--
        <Message Importance="high" Text="Machine Unique Hash: $(MachineUniqueHash)"/>
        <Message Importance="high" Text="User Unique Hash: $(UserUniqueHash)"/>
        -->
        <PropertyGroup>
            <!-- to resolve one of these timestamp: https://dotnetfiddle.net/myVR4R -->
            <TimestampEpoch>637450560000000000</TimestampEpoch> <!-- jan 1st, 2021 -->
            <TimestampResolution>600000000</TimestampResolution> <!-- minutes -->
            <TimestampTicks>$([System.DateTime]::UtcNow.Ticks)</TimestampTicks>
            <Timestamp>$([System.Math]::Floor($([MsBuild]::Divide($([MsBuild]::Subtract($(TimestampTicks),$(TimestampEpoch))),$(TimestampResolution)))))</Timestamp>
            <Timestamp>$([System.UInt64]::Parse($(Timestamp)).ToString('x'))</Timestamp>
            <GitIsDirty Condition="'$(GitIsDirty)'!='0' And '$(ContinuousIntegrationBuild)'=='true'">0</GitIsDirty>
            <VersionSuffix Condition="'$(GitIsDirty)'=='0' And '$(SourceRevisionId)'!=''">$(VersionSuffix)+$(SourceRevisionId.Substring(0,7))</VersionSuffix>
            <VersionSuffix Condition="'$(GitIsDirty)'!='0' And '$(VersionSuffix)'==''">-pre-$(Timestamp)</VersionSuffix>
            <VersionSuffix Condition="'$(GitIsDirty)'!='0'">$(VersionSuffix)+$(MachineUniqueHash.Substring(0,4))/$(UserUniqueHash.Substring(0,3))</VersionSuffix>
            <GitSemVerMajor Condition="'$(GitSemVerMajor)'=='0'">$(GitBaseVersionMajor)</GitSemVerMajor>
            <GitSemVerMinor Condition="'$(GitSemVerMinor)'=='0'">$(GitBaseVersionMinor)</GitSemVerMinor>
            <VersionPrefix Condition="'$(VersionPrefix)'=='1.0.0'" />
            <!-- CI build or non-dirty: year.month.update+commit -->
            <!-- non-CI dirty: year.month.update-pre-timestamp+machine/user -->
            <Version>$(VersionPrefix)$(GitSemVerMajor).$(GitSemVerMinor).$(GitSemVerPatch)$(VersionSuffix)</Version>
        </PropertyGroup>
        <!--<CallTarget Targets="GitInfoReport"/>-->
        <!--<Message Importance="high" Text="Minimum Version: $(GitBaseVersionMajor).$(GitBaseVersionMinor).0"/>-->
        <Message Importance="high" Text="Version: $(Version)"/>
    </Target>
</Project>
